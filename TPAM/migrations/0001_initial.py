# Generated by Django 3.1.5 on 2021-02-07 10:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocosEngineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eng_name', models.CharField(max_length=50)),
                ('text', models.TextField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'locos_engineer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocosEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'locos_entry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocosLocomotiveclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_grouping_company', models.CharField(max_length=100)),
                ('grouping_company', models.CharField(max_length=100)),
                ('pre_grouping_class', models.CharField(max_length=100)),
                ('loco_class', models.CharField(max_length=100)),
                ('br_power_class', models.CharField(db_column='BR_power_class', max_length=5)),
                ('wheel_arrangement', models.CharField(max_length=100)),
                ('number_range', models.CharField(max_length=100)),
                ('designer', models.CharField(max_length=200)),
                ('manufacturer', models.CharField(max_length=200)),
                ('years_built', models.CharField(max_length=100)),
                ('years_withdrawn', models.CharField(max_length=100)),
                ('date_built_en', models.CharField(max_length=100)),
                ('lner_class', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'locos_locomotiveclass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocosTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'locos_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Depots',
            fields=[
                ('depot_id', models.AutoField(primary_key=True, serialize=False)),
                ('depot', models.CharField(blank=True, max_length=500, null=True)),
                ('codes', models.CharField(blank=True, max_length=100, null=True)),
                ('code_dates', models.CharField(blank=True, max_length=100, null=True)),
                ('date_opened', models.CharField(blank=True, max_length=20, null=True)),
                ('date_closed_to_steam', models.CharField(blank=True, max_length=20, null=True)),
                ('date_closed', models.CharField(blank=True, max_length=20, null=True)),
                ('pre_grouping_company', models.CharField(blank=True, max_length=20, null=True)),
                ('grouping_company', models.CharField(blank=True, max_length=20, null=True)),
                ('br_region', models.CharField(blank=True, db_column='BR_region', max_length=20, null=True)),
                ('map', models.CharField(blank=True, max_length=200, null=True)),
                ('web', models.CharField(blank=True, max_length=200, null=True)),
                ('comments', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'depots',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LocomotiveClass',
            fields=[
                ('classid', models.SmallAutoField(primary_key=True, serialize=False)),
                ('pre_grouping_company', models.CharField(blank=True, max_length=100, null=True)),
                ('grouping_company', models.CharField(blank=True, max_length=100, null=True)),
                ('pre_grouping_class', models.CharField(blank=True, max_length=100, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=100, null=True)),
                ('br_power_class', models.CharField(blank=True, db_column='BR_power_class', max_length=5, null=True)),
                ('wheel_id', models.SmallIntegerField(blank=True, null=True)),
                ('wheel_arrangement', models.CharField(blank=True, max_length=100, null=True)),
                ('number_built', models.SmallIntegerField(blank=True, null=True)),
                ('number_range', models.CharField(blank=True, max_length=100, null=True)),
                ('designer', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('years_built', models.CharField(blank=True, max_length=100, null=True)),
                ('years_withdrawn', models.CharField(blank=True, max_length=100, null=True)),
                ('date_built_en', models.CharField(blank=True, max_length=100, null=True)),
                ('lner_class', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'locomotive_class',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Locomotive',
            fields=[
                ('locoid', models.SmallAutoField(primary_key=True, serialize=False)),
                ('build_date', models.CharField(blank=True, max_length=10, null=True)),
                ('pre_grouping_class', models.CharField(blank=True, max_length=10, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=20, null=True)),
                ('number', models.SmallIntegerField(blank=True, null=True)),
                ('wheel_arrangement', models.CharField(blank=True, max_length=10, null=True)),
                ('designer', models.CharField(blank=True, max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=50, null=True)),
                ('order_number', models.CharField(blank=True, max_length=30, null=True)),
                ('works_number', models.CharField(blank=True, max_length=30, null=True)),
                ('withdrawn', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'locomotive',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manufacturers',
            fields=[
                ('manufacturer_id', models.AutoField(primary_key=True, serialize=False)),
                ('manufacturer_code', models.CharField(blank=True, max_length=3, null=True)),
                ('manufacturer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('date_opened', models.CharField(blank=True, max_length=10, null=True)),
                ('date_closed', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(blank=True, max_length=77, null=True)),
                ('steam', models.CharField(blank=True, max_length=10, null=True)),
                ('diesel', models.CharField(blank=True, max_length=10, null=True)),
                ('electric', models.CharField(blank=True, max_length=10, null=True)),
                ('map', models.CharField(blank=True, max_length=200, null=True)),
                ('web', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'manufacturers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WheelArrangement',
            fields=[
                ('wheelid', models.SmallAutoField(primary_key=True, serialize=False)),
                ('uic_system', models.CharField(blank=True, db_column='UIC_system', max_length=20, null=True)),
                ('whyte_notation', models.CharField(blank=True, db_column='Whyte_notation', max_length=20, null=True)),
                ('american_name', models.CharField(blank=True, db_column='American_name', max_length=75, null=True)),
                ('visual', models.CharField(blank=True, db_column='Visual', max_length=20, null=True)),
            ],
            options={
                'db_table': 'wheel_arrangement',
                'managed': True,
            },
        ),
    ]
