# Generated by Django 3.2.1 on 2024-02-16 14:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GdUkAlwaysOpenLand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.BigIntegerField(blank=True, db_column='OBJECTID', null=True)),
                ('AOL_id', models.FloatField(blank=True, db_column='AOL_ID', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('lastupdate', models.FloatField(blank=True, db_column='LastUpdate', null=True)),
                ('shape_are', models.FloatField(blank=True, db_column='Shape__Are', null=True)),
                ('shape_len', models.FloatField(blank=True, db_column='Shape__Len', null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'AlwaysOpenedLand',
                'db_table': 'gd_UK_always_open_land',
            },
        ),
        migrations.CreateModel(
            name='GdUkParksGardens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=200, null=True)),
                ('grade', models.CharField(blank=True, db_column='Grade', max_length=5, null=True)),
                ('regdate', models.CharField(blank=True, db_column='RegDate', max_length=20, null=True)),
                ('amenddate', models.CharField(blank=True, db_column='AmendDate', max_length=20, null=True)),
                ('legacyuid', models.CharField(blank=True, db_column='LegacyUID', max_length=10, null=True)),
                ('ngr', models.CharField(blank=True, db_column='NGR', max_length=20, null=True)),
                ('capturesca', models.CharField(blank=True, db_column='CaptureSca', max_length=10, null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.URLField(blank=True, db_column='Hyperlink', max_length=300, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'Parks & Gardens',
                'db_table': 'gd_UK_parks_gardens',
            },
        ),
        migrations.CreateModel(
            name='GdUkScheduledMonuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('scheddate', models.CharField(blank=True, db_column='SchedDate', max_length=20, null=True)),
                ('amenddate', models.CharField(blank=True, db_column='AmendDate', max_length=20, null=True)),
                ('legacyuid', models.CharField(blank=True, db_column='LegacyUID', max_length=10, null=True)),
                ('ngr', models.CharField(blank=True, db_column='NGR', max_length=20, null=True)),
                ('capturesca', models.CharField(blank=True, db_column='CaptureSca', max_length=10, null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.URLField(blank=True, db_column='Hyperlink', max_length=300, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'Scheduled Monuments',
                'db_table': 'gd_UK_scheduled_monuments',
            },
        ),
        migrations.CreateModel(
            name='GdUkWorldHeritageSites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('inscrdate', models.CharField(blank=True, db_column='InscrDate', max_length=20, null=True)),
                ('amenddate', models.CharField(blank=True, db_column='AmendDate', max_length=20, null=True)),
                ('legacyuid', models.CharField(blank=True, db_column='LegacyUID', max_length=10, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=300, null=True)),
                ('ngr', models.CharField(blank=True, db_column='NGR', max_length=20, null=True)),
                ('capturesca', models.CharField(blank=True, db_column='CaptureSca', max_length=10, null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.URLField(blank=True, db_column='Hyperlink', max_length=300, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'World Heritage Sites',
                'db_table': 'gd_UK_world_heritage_sites',
            },
        ),
        migrations.CreateModel(
            name='MyPlaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('hyperlink', models.URLField(blank=True, db_column='Hyperlink', max_length=300, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('favourite', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myplace_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MyPlaces',
            },
        ),
        migrations.CreateModel(
            name='GdUkListedBuildings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=100, null=True)),
                ('grade', models.CharField(blank=True, db_column='Grade', max_length=5, null=True)),
                ('listdate', models.CharField(blank=True, db_column='ListDate', max_length=20, null=True)),
                ('amenddate', models.CharField(blank=True, db_column='AmendDate', max_length=20, null=True)),
                ('legacyuid', models.CharField(blank=True, db_column='LegacyUID', max_length=10, null=True)),
                ('ngr', models.CharField(blank=True, db_column='NGR', max_length=20, null=True)),
                ('capturesca', models.CharField(blank=True, db_column='CaptureSca', max_length=10, null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('hyperlink', models.URLField(blank=True, db_column='Hyperlink', max_length=300, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('wikislug', models.SlugField(blank=True, default=None, null=True)),
                ('mynotes', models.TextField(blank=True, default=None, null=True)),
                ('liked', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ListedBuildings',
                'db_table': 'gd_UK_listed_buildings',
            },
        ),
    ]
