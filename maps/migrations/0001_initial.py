# Generated by Django 3.2.1 on 2021-05-06 09:02

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(name='GdUkAlwaysOpenLand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.BigIntegerField(blank=True, db_column='OBJECTID', null=True)),
                ('AOL_id', models.FloatField(blank=True, db_column='AOL_ID', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('lastupdate', models.FloatField(blank=True, db_column='LastUpdate', null=True)),
                ('shape_are', models.FloatField(blank=True, db_column='Shape__Are', null=True)),
                ('shape_len', models.FloatField(blank=True, db_column='Shape__Len', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'AlwaysOpenedLand',
                'db_table': 'gd_UK_always_open_land',
                'managed': True,
            },
        ),
        migrations.CreateModel(name='GdUkListedBuildings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
                ('grade', models.TextField(blank=True, db_column='Grade', null=True)),
                ('listdate', models.TextField(blank=True, db_column='ListDate', null=True)),
                ('amenddate', models.TextField(blank=True, db_column='AmendDate', null=True)),
                ('legacyuid', models.TextField(blank=True, db_column='LegacyUID', null=True)),
                ('ngr', models.TextField(blank=True, db_column='NGR', null=True)),
                ('capturesca', models.TextField(blank=True, db_column='CaptureSca', null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('hyperlink', models.TextField(blank=True, db_column='Hyperlink', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'ListedBuildings',
                'db_table': 'gd_UK_listed_buildings',
                'managed': True,
            },
        ),
        migrations.CreateModel(name='GdUkParksGardens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('grade', models.TextField(blank=True, db_column='Grade', null=True)),
                ('regdate', models.TextField(blank=True, db_column='RegDate', null=True)),
                ('amenddate', models.TextField(blank=True, db_column='AmendDate', null=True)),
                ('legacyuid', models.TextField(blank=True, db_column='LegacyUID', null=True)),
                ('ngr', models.TextField(blank=True, db_column='NGR', null=True)),
                ('capturesca', models.TextField(blank=True, db_column='CaptureSca', null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.TextField(blank=True, db_column='Hyperlink', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Parks & Gardens',
                'db_table': 'gd_UK_parks_gardens',
                'managed': True,
            },
        ),
        migrations.CreateModel(name='GdUkScheduledMonuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('scheddate', models.TextField(blank=True, db_column='SchedDate', null=True)),
                ('amenddate', models.TextField(blank=True, db_column='AmendDate', null=True)),
                ('legacyuid', models.TextField(blank=True, db_column='LegacyUID', null=True)),
                ('ngr', models.TextField(blank=True, db_column='NGR', null=True)),
                ('capturesca', models.TextField(blank=True, db_column='CaptureSca', null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.TextField(blank=True, db_column='Hyperlink', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Scheduled Monuments',
                'db_table': 'gd_UK_scheduled_monuments',
                'managed': True,
            },
        ),
        migrations.CreateModel(name='GdUkWorldHeritageSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listentry', models.BigIntegerField(blank=True, db_column='ListEntry', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('inscrdate', models.TextField(blank=True, db_column='InscrDate', null=True)),
                ('amenddate', models.TextField(blank=True, db_column='AmendDate', null=True)),
                ('legacyuid', models.TextField(blank=True, db_column='LegacyUID', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('ngr', models.TextField(blank=True, db_column='NGR', null=True)),
                ('capturesca', models.TextField(blank=True, db_column='CaptureSca', null=True)),
                ('easting', models.FloatField(blank=True, db_column='Easting', null=True)),
                ('northing', models.FloatField(blank=True, db_column='Northing', null=True)),
                ('area_ha', models.FloatField(blank=True, db_column='AREA_HA', null=True)),
                ('hyperlink', models.TextField(blank=True, db_column='Hyperlink', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'World Heritage Sites',
                'db_table': 'gd_UK_world_heritage_sites',
                'managed': True,
            },
        ),
    ]
